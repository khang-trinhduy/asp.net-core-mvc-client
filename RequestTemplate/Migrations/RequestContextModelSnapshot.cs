// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RequestTemplate.Models;

namespace RequestTemplate.Migrations
{
    [DbContext(typeof(RequestContext))]
    partial class RequestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RequestTemplate.Models.Applicant", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("Age");

                    b.Property<string>("AppliedPosition");

                    b.Property<string>("FullName");

                    b.Property<string>("Gender");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("RequestTemplate.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicantId");

                    b.Property<string>("Contents");

                    b.Property<string>("CustomerName");

                    b.Property<string>("Email");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("File0");

                    b.Property<string>("File1");

                    b.Property<string>("File2");

                    b.Property<string>("File3");

                    b.Property<string>("File4");

                    b.Property<int?>("FlowId");

                    b.Property<int>("Kind");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("Product");

                    b.Property<Guid?>("RequesterId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("FlowId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RequestTemplate.Models.WorkFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assignee1");

                    b.Property<string>("Assignee2");

                    b.Property<string>("Assignee3");

                    b.Property<string>("Assignee4");

                    b.Property<string>("Assignee5");

                    b.Property<string>("CurrentStage");

                    b.Property<int>("End");

                    b.Property<string>("File1");

                    b.Property<string>("File2");

                    b.Property<string>("File3");

                    b.Property<string>("File4");

                    b.Property<string>("File5");

                    b.Property<string>("Name1");

                    b.Property<string>("Name2");

                    b.Property<string>("Name3");

                    b.Property<string>("Name4");

                    b.Property<string>("Name5");

                    b.Property<string>("Owner1");

                    b.Property<string>("Owner2");

                    b.Property<string>("Owner3");

                    b.Property<string>("Owner4");

                    b.Property<string>("Owner5");

                    b.Property<int?>("RequestId");

                    b.Property<int>("Stage1");

                    b.Property<int>("Stage2");

                    b.Property<int>("Stage3");

                    b.Property<int>("Stage4");

                    b.Property<int>("Stage5");

                    b.Property<int>("Start");

                    b.Property<string>("Task1");

                    b.Property<string>("Task2");

                    b.Property<string>("Task3");

                    b.Property<string>("Task4");

                    b.Property<string>("Task5");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Flows");
                });

            modelBuilder.Entity("RequestTemplate.Models.Request", b =>
                {
                    b.HasOne("RequestTemplate.Models.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantId");

                    b.HasOne("RequestTemplate.Models.WorkFlow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowId");
                });

            modelBuilder.Entity("RequestTemplate.Models.WorkFlow", b =>
                {
                    b.HasOne("RequestTemplate.Models.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId");
                });
#pragma warning restore 612, 618
        }
    }
}
